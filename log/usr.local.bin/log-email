#!/bin/bash
# NAME
#   log-email - email a disgest of one or more log files.
#
# SYNOPSIS
#   log-email [-h]
#   log-email [-k] [-o] [ -r recipient_email_address ] logname
#
# DESCRIPTION
#   log-email constructs an email containing data drawn from the log
#   files identified by logname which must have one of the following
#   forms:
#
#   YYYY     send a log file for the specified year;
#   YYYYMM   send a log file for the specified month;
#   YYYYMMDD send a log file for the specified day.
#
#   The generated email has a simple EMAIL_body suitable for processing by
#   the WordPress Postie plugin and a KML file attatchment called
#   logname.kml generated by processing logname with log-kml.
#
#   If logname specifies a daily log file (i.e. has the form YYYYMMDD)
#   the email will also include the raw log file as a second
#   attatchment called logname.log.
#
#   The -h option displays this manual page.
#
#   The -k switch suppresses generation of the KML attatchment.
#
#   The -o switch causes the generated email to be printed to standard
#   output rather than being sent.
#
#   The -r option introduces an email address that will override the
#   default email recipient defined in log.defs.
#
#   The generated email is a mult-part MIME message consisting of
#   two or three parts:
#
#   Part 1 (email EMAIL_body) consists of a Subject line and a few lines of
#   text which supply metadata describing the log. This data is in a
#   format which can be easily processed to create a Wordpress page
#   by the Wordpress Postie plugin.
#
#   Part 2 (KML file attatchment 'logname.kml') plots vessel movement
#   over the selected time period.
#
#   Part 3 (text file attatchment 'logname.log') is only included if
#   the selected log is a 'day' log and is simply a copy of the log
#   system data file for the selected day.
#
# AUTHOR
#   Paul Reeve <preeve@pdjr.eu>

. /usr/local/bin/log.defs

OPTION_MAKE_KML=yes
EMAIL_SEND=
EMAIL_RECIPIENT=${LOG_EMAIL_DEFAULT_RECIPIENT}
LOGNAME=$( ${DATE} '+%Y%m%d' )

while [ "${1}" != "" ] ; do
  case ${1} in
    -h)
      ${SED} -e '/^$/,$d' ${0}
      exit 0
      ;;
    -k)
      OPTION_MAKE_KML=no
      ;;
    -o)
      EMAIL_SEND="--output"
      ;;
    -r)
      shift
      EMAIL_RECIPIENT=${1}
      ;;
    *)
      LOGNAME=${1}
      ;;
  esac
  shift
done

if [ "${LOGNAME}" == "" ] ; then
    echo -e "usage: log-email [-k] [-o] [-r recipient] logname\n"
    exit 1
else
  if ! [[ "${LOGNAME}" =~ [0-9][0-9][0-9][0-9]([0-9][0-9])?([0-9][0-9])? ]] ; then echo "log-email: bad logname" ; exit 2 ; fi
  if [ ! -f "${LOGDIR}${LOGNAME}" ] ; then echo "log-email: log \"${LOGNAME}\" does not exist" ; exit 2 ; fi
fi


# The publication date of the email (i.e. today's date)
WP_PUBDATE=$( ${DATE} '+%Y%m%d' )

# The date to which the log data relates prettily formatted.
WP_TITLE_DATE=""

# The Wordpress category for the supplied email content.
WP_CATEGORY=${LOG_EMAIL_WORDPRESS_CATEGORY}

# Comma separated list of Wordpress tags characterising the email content.
WP_TAG=""

case ${#LOGNAME} in
    4)
        WP_TAG="year,${LOGNAME}"
        WP_EMAIL_BODY_ANNEX="[yafig category='log' tag='month+${LOGNAME}' columns=4]"
        WP_TITLE_DATE=$( ${DATE} -d "${LOGNAME}0101" "+%Y - " ) 
        WP_PUBDATE=$( ${DATE} -d "${LOGNAME}1231 +1 day" '+%Y%m%d' )
        ;;
    6)
        WP_TAG="month,${LOGNAME},${LOGNAME:0:4}"
        WP_TITLE_DATE=$( ${DATE} -d "${LOGNAME}01" "+%B %Y - " ) 
        WP_PUBDATE=$( ${DATE} -d "${LOGNAME}01 +1 month" '+%Y%m%d' )
        ;;
    8)
        WP_TAG="day,${LOGNAME},${LOGNAME:0:6},${LOGNAME:0:4}"
        WP_TITLE_DATE=$( ${DATE} -d "${LOGNAME}" "+%a %d %B %Y - " ) 
        WP_PUBDATE=$( ${DATE} -d "${LOGNAME}" '+%Y%m%d' )
        ;; 
    *)
        echo "log-email: bad logfile specification (${LOGNAME})"
        exit 2
esac

STOPS=$( ${LOGSTOPS} "${LOGNAME}" )
STOPCOUNT=$(${GREP} -c '^' <<<"${STOPS}")

if [ ${STOPCOUNT} -eq 0 ] ; then
    echo "log-email: log is corrupt (no stop position data)"
    exit 3
fi

STARTPOSITION=$(${HEAD} -1 <<< "${STOPS}")
LAT=$(echo ${STARTPOSITION} | ${JQ} -j '.latitude');
LON=$(echo ${STARTPOSITION} | ${JQ} -j '.longitude');
START="${LAT}N ${LON}E"
END=""
EMAIL_SUBJECT_ENDCLAUSE=""
REVERSEGEORESULT=$(${WGET} -q -O - "${NOMINATUM_QUERY}lat=${LAT}&lon=${LON}")
BLOB="null"
for selector in ${LOG_EMAIL_REVGEO_PLACE_SELECTORS[@]} ; do
  BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j "${selector}")
  if [ "${BLOB}" != "null" ] ; then break ; fi
done
if [ "${BLOB}" != "null" ] ; then START=$(${RECODE} ..html <<<"${BLOB}") ; fi
if [ "${DEBUG}" == "yes" ] ; then echo "log-email: debug: start position identified as ${START}" ; fi

# If there is a termination position, then do the same thing for that.
#
if [ ${STOPCOUNT} -gt 1 ]; then
    STOPPOSITION=$(${TAIL} -1 <<< "${STOPS}")
    LAT=$(echo ${STOPPOSITION} | ${JQ} -j '.latitude');
    LON=$(echo ${STOPPOSITION} | ${JQ} -j '.longitude');
    END="${LAT}N ${LON}E"
    REVERSEGEORESULT=$(${WGET} -q -O - "${NOMINATUM_QUERY}lat=${LAT}&lon=${LON}")
    BLOB="null"
    for selector in ${LOG_EMAIL_REVGEO_PLACE_SELECTORS[@]} ; do
      BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j "${selector}")
      if [ "${BLOB}" != "null" ] ; then break ; fi
    done
    if [ "${BLOB}" != "null" ] ; then END=$(${RECODE} ..html <<<"${BLOB}") ; fi
    if [ "${DEBUG}" == "yes" ] ; then echo "log-email: debug: end position identified as ${END}" ; fi
fi

if [ ${STOPCOUNT} -gt 1 ] ; then
    WP_TAG="passage,${WP_TAG}"
else
    WP_TAG="moored,${WP_TAG}"
fi

# Generate email subject
EMAIL_SUBJECT_ENDCLAUSE=""
if [ ${STOPCOUNT} -gt 1 ] ; then EMAIL_SUBJECT_ENDCLAUSE=" to ${END}" ; fi
EMAIL_SUBJECT="${WP_CATEGORY}: ${WP_TITLE_DATE}${START}${EMAIL_SUBJECT_ENDCLAUSE}"

# Generate email body
EMAIL_BODY="date: ${WP_PUBDATE}"$'\n'
EMAIL_BODY="${EMAIL_BODY}tags: ${WP_TAG},${START},${END}"$'\n'
EMAIL_BODY="${EMAIL_BODY}${WP_EMAIL_BODY_ANNEX}"$'\n'$'\n'

# Generate KML attachment
if [ "${OPTION_MAKE_KML}" == "yes" ] ; then
  KML_ATTACHMENT_FILENAME="/tmp/${LOGNAME}.kml"
  ${LOGKML} -a ${LOGNAME} > "${KML_ATTACHMENT_FILENAME}"
  KML_ATTACHMENT_CLAUSE="--file-attach ${KML_ATTACHMENT_FILENAME}"
fi

# Generate log file attachment
if [ ${#LOGNAME} -eq 8 ] ; then
  LOG_ATTACHMENT_FILENAME="/tmp/${LOGNAME}.log"
  ${CP} "${LOGDIR}${LOGNAME}" "${LOG_ATTACHMENT_FILENAME}"
  LOG_ATTACHMENT_CLAUSE="--file-attach ${LOG_ATTACHMENT_FILENAME}"
fi

sudo -u wordpress ${MIMECONSTRUCT} ${EMAIL_SEND} --to "${EMAIL_RECIPIENT}" --subject "${EMAIL_SUBJECT}" --string "${EMAIL_BODY}" ${KML_ATTACHMENT_CLAUSE} ${LOG_ATTACHMENT_CLAUSE}
