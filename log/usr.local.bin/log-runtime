#!/bin/bash
#
# NAME
#   log-runtime.sh - process a log file and print the total runtime of some
#   device.
#
# SYNOPSIS
#   log-runtime [-d device] logfilespec...
#   log-runtime -h
#
# DESCRIPTION
#   log-runtime outputs the total number of operating hours for a particular
#   device as recorded in one or more specified log files.
#
#   logfilespec is a log file specifier of one of three types:
#
#   YYYY selects all the log files for the specified year;
#   YYYYMM selects all the log files for the specified month;
#   YYYYMMDD selects the log file for the specified day.
#
#   Records in the specified logfiles which select the device to be
#   reported are selected by grep using a search key which defaults
#   to LOG_RUNTIME_DEFAULT_DEVICE (defined in 'log.defs').
#   The -d option can be used to introduce an arbitrary alternate
#   search key.
#
#   The script operates by processing timestamp values on records 
#   in each selected log file and so calculates the total device runtime as
#   hours:minutes for the selected day.
#
# AUTHOR
#   Paul Reeve <preeve@pdjr.eu>

. ./log.defs

DEVICE=${LOG_RUNTIME_DEFAULT_DEVICE}
FILESPECS=

while [ "${1}" != "" ] ; do
    case ${1} in
        -d)
            shift
            DEVICE=${1}
            ;;
        -h)
            ${GREP} '^#' ${0}
            exit 0
            ;;
        *) 
            FILESPEC=${1}
            while [ ${#FILESPEC} -lt 8 ] ; do FILESPEC=${FILESPEC}'?' ; done
            FILESPECS="${FILESPECS} ${LOGDIR}${FILESPEC}"
            ;;
    esac
    shift
done

if [ "${FILESPECS}" == "" ] ; then
    echo "usage: log-runtime [-d DEVICE] logfilespec..."
    echo "usage: log-runtime -h"
    exit 0
fi

TOTALRUNTIME=0
ENTRIES=()
for FILENAME in ${FILESPECS} ; do
  readarray -t ENTRIES <<<$( ${GREP} -hi "${DEVICE}" ${FILENAME} )
  START=""
  STOP=""
  if [ ${#ENTRIES[@]} -gt 0 ] ; then
    for line in "${ENTRIES[@]}" ; do
      time=${line:0:20}
      state=$( ${SED} -e 's/.*STATE //' <<< ${line} )
      if [ "${state}" == "1" ] ; then
        START=$(${DATE} --utc -d "${time}" '+%s')
      fi
      if [ "${state}" == "0" ] ; then
        if [ "${START}" != "" ] ; then
          STOP=$(${DATE} --utc -d "${time}" '+%s') ;
        fi
      fi
      if [ "${START}" != "" ] && [ "${STOP}" != "" ] ; then
        RUNTIME=$(( ${STOP} - ${START} ))
        TOTALRUNTIME=$(( ${TOTALRUNTIME} + ${RUNTIME} ))
        START=""
        STOP=""
      fi 
    done
  fi 
done

HOURS=$(( ${TOTALRUNTIME} / 3600 ))
MINUTES=$(( ($TOTALRUNTIME - (${HOURS} * 3600)) / 60 )) 
if [ ${#MINUTES} -eq 1 ] ; then MINUTES="0${MINUTES}" ; fi
echo "${HOURS}:${MINUTES}"
