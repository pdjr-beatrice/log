#!/bin/bash
#
# NAME
#   log-runtime.sh - process a log file and print the total runtime of some
#   device.
#
# SYNOPSIS
#   log-runtime [-d device] logfilespec...
#   log-runtime -h
#
# DESCRIPTION
#   log-runtime outputs the total number of operating hours for a particular
#   device as recorded in one or more specified log files.
#
#   logfilespec is a log file specifier of one of three types:
#
#   YYYY selects all the log files for the specified year;
#   YYYYMM selects all the log files for the specified month;
#   YYYYMMDD selects the log file for the specified day.
#
#   The optional -d switch allows log entries for the required device to be
#   specified by their log file token.  In the absence of the -d option, the
#   script will return total engine hours (equivalent to specifying -d ENGINE).
#
#   The script operates by processing timestamp values on device State entries
#   in each selected log file and so calculates the total device runtime as
#   hours:minutes for the selected day.
#
# AUTHOR
#   Paul Reeve <preeve@pdjr.eu>

source log.defs

DEVICE=${LOG_HOURS_DEFAULT_DEVICE}
FILESPECS=

while [ "${1}" != "" ] ; do
    case ${1} in
        -d)
            shift
            DEVICE=${1}
            ;;
        -h)
            ${GREP} '^#' ${0}
            exit 0
            ;;
        *) 
            FILESPEC=${1}
            while [ ${#FILESPEC} -lt 8 ] ; do FILESPEC=${FILESPEC}'?' ; done
            FILESPECS="${FILESPECS} ${LOGDIR}${FILESPEC}"
            ;;
    esac
    shift
done

if [ "${FILESPECS}" == "" ] ; then
    echo "usage: log-runtime [-d DEVICE] logfilespec..."
    echo "usage: log-runtime -h"
    exit 0
fi

TOTALRUNTIME=0
for FILENAME in ${FILESPECS} ; do
    ENTRIES=$(${GREP} -hi "^STATE ${DEVICE}" ${FILENAME})
    START=""
    STOP=""
    while read time ltime type selector state ; do
        if [ "${state}" == "1" ] ; then
            START=$(${DATE} --utc -d "${time}" '+%s')
        fi
        if [ "${state}" == "0" ] ; then
            if [ "${START}" != "" ] ; then
                STOP=$(${DATE} --utc -d "${time}" '+%s') ;
            fi
        fi
        if [ "${START}" != "" ] && [ "${STOP}" != "" ] ; then
            RUNTIME=$(( ${STOP} - ${START} ))
            TOTALRUNTIME=$(( ${TOTALRUNTIME} + ${RUNTIME} ))
            START=""
            STOP=""
        fi 
    done <<< "${ENTRIES}" 
done

HOURS=$(( ${TOTALRUNTIME} / 3600 ))
MINUTES=$(( ($TOTALRUNTIME - (${HOURS} * 3600)) / 60 )) 
if [ ${#MINUTES} -eq 1 ] ; then MINUTES="0${MINUTES}" ; fi
echo "${HOURS}:${MINUTES}"
