#!/bin/bash
#
# NAME
#   log-positions - generate a list of position coordinates from one or more
#   log files.
#
# SYNOPSIS
#   log-positions [logfile...]
#   log-positions -h
#
# DESCRIPTION
#
#   Output a list of JSON encoded position records from one or more
#   log files.
#
#   If logfile is ommitted, then the output will be drawn from the
#   current (todays) log file.
#
#   logfile arguments are processed in the order in which they occur
#   and can have any of the following formats:
#
#   YYYY selects all the log files for the specified year;
#   YYYYMM selects all the log files for the specified month;
#   YYYYMMDD selects the log file for the specified day.
#
#   The script outputs records of the form:
#
#   { "latitude": lat, "longitude": lng, "date": "YYYY-MM-DDThh:mm:ssZ" }
#
# AUTHOR
#   Paul Reeve <preeve@pdjr.eu>

. log.defs

FILESPECS=

while  [ "${1}" != "" ] ; do
  case ${1} in
    -h)
      ${GREP} '^#' ${0}
      exit 0
      ;;
    *)
      FILESPEC=${1}
      while [ ${#FILESPEC} -lt 8 ] ; do FILESPEC=${FILESPEC}'?' ; done
      FILESPECS="${FILESPECS} ${LOGDIR}${FILESPEC}"
      ;;
  esac
  shift
done

if [ ! "${FILESPECS}" ] ; then FILESPECS="${LOGDIR}$(${DATE} +%Y%m%d)" ; fi

for FILENAME in ${FILESPECS} ; do
  while read -r line; do
    if [[ "${line}" == *"POSITION"* ]] ; then
      date=${line:0:20}
      position_json=$( sed -e 's/.*POSITION //' <<<${line} )
      lat=$(echo "${position_json}" | ${JQ} -j '.latitude')
      lon=$(echo "${position_json}" | ${JQ} -j '.longitude')
      echo $( printf "{ \"latitude\": %0.6f, \"longitude\": %0.6f, \"date\": %s }" ${lat} ${lon} ${date} )
    fi
  done < "${FILENAME}"
done
