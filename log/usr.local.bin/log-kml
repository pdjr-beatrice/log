#!/bin/bash
#
# NAME
#   log-kml - generate a KML rendering of one or more log files.
#
# SYNOPSIS
#   log-kml [-a] [logfile...]
#   log-kml -h
#
# DESCRIPTION
#   If the script is invoked with no arguments, then it will operate as
#   if it had been called with a single logfile argument set to the
#   position YYYYMMDD that represents the current day.
#
#   Otherwise, each logfile argument is a log file specifier of the
#   form:
#
#   YYYY     - selects all the log files for the specified year;
#   YYYYMM   - selects all the log files for the specified month;
#   YYYYMMDD - elects the log file for the specified day.
#
#   log-kml(1) concatenates all the selected log files and renders them
#   as a KML document suitable for overlaying on a map. The substantive
#   KML content of the output file is:
#
#   1. A Folder containing a Placemark for each of the stops returned
#      by executing log-positions(1) against the collated data
#
#   2. A Placemark entity defining a line string which depicts the
#      track of the vessel as defined by the points returned by
#      executing log-positions(1) against the collated data.
#
#   The script supports the following command line options:
#
#   -a  passed to log-positions(1) to influence the granularity of stop
#       rendering.
#
#   -h  displays this documentation.
#
# AUTHOR
#   Paul Reeve <preeve@pdjr.eu>

. /usr/local/bin/log.defs

OPTION_GENERATE_STOPS=
OPTION_GENERATE_TRACK=
OPTION_GENERATE_VESSELS=
FILESPECS=

while [ "${1}" != "" ] ; do
  case ${1} in
    -h)
      ${GREP} '^#' ${0}
      exit 0
      ;;
    -s)
      OPTION_GENERATE_STOPS=yes
      ;;
    -t)
      OPTION_GENERATE_TRACK=yes
      ;;
    -v)
      OPTION_GENERATE_VESSELS=yes
      ;;
    *) 
      FILESPEC=${1}
      while [ ${#FILESPEC} -lt 8 ] ; do FILESPEC=${FILESPEC}'?' ; done
      FILESPECS="${FILESPECS} ${LOGDIR}${FILESPEC}"
      ;;
  esac
  shift
done

if [ ! "${FILESPECS}" ] ; then FILESPECS=$(${DATE} +"%Y%m%d") ; fi

generateStops() {
  local stops=()
  local marker=
  local markerlabel=

  readarray -t stops < <( ${LOGPOSITIONS} -s ${1} )
  
  echo "    <Folder id='${1}-stops'>"
  for stop in "${stops[@]}" ; do
    local longitude=$(echo ${stop} | ${JQ} -j '.longitude')
    local latitude=$(echo ${stop} | ${JQ} -j '.latitude')
    local date=$(echo ${stop} | ${JQ} -j '.date')
    local day=${date%%T*}
    local time=${date#*T} ; time=${time/_/ }
    local name="${longitude}, ${latitude}"
    local duration=0
    if [[ $( ${JQ} -j 'has("duration")' <<< ${stop} ) == true ]] ; then
      duration=$( echo ${stop} | ${JQ} -j '.duration' )
    fi
    local reversegeoresult=$(${WGET} -q -O - "${NOMINATUM_QUERY}lat=${latitude}&lon=${longitude}")
    local location=$(echo ${reversegeoresult} | ${JQ} -j '.address.hamlet')
    if [ "${location}" == "null" ] ; then location=$(echo ${reversegeoresult} | ${JQ} -j '.address.village') ; fi
    if [ "${location}" == "null" ] ; then location=$(echo ${reversegeoresult} | ${JQ} -j '.address.suburb') ; fi
    if [ "${location}" == "null" ] ; then location=$(echo ${reversegeoresult} | ${JQ} -j '.address.municipality') ; fi
    if [ "${location}" == "null" ] ; then location=$(echo ${reversegeoresult} | ${JQ} -j '.address.city') ; fi
    if [ "${location}" != "null" ] ; then name=$(${RECODE} ..html <<<"${location}") ; fi

    if [ ${#stops[@]} -eq 1 ] ; then
      marker="#mooredmarker"
      markerlabel="${day}: MOORED";
    else
      marker="#haltmarker"
      markerlabel="${time}: HALT"
      if [ "${stop}" == "${stops[0]}" ] ; then
        marker="#startmarker"
        markerlabel="${time}: START"
      fi
      if [ "${stop}" == "${stops[-1]}" ] ; then
        marker="#stopmarker"
        markerlabel="${time}: STOP"
      fi
    fi
    
    echo "      <Placemark>"
    echo "        <name>${markerlabel}</name>"
    echo "        <description>"
    echo "          <![CDATA["
    echo "            Location: ${name}<br>"
    if [ ${duration} -ne 0 ] ; then
    echo "            Duration: ${duration}"
    fi 
    echo "          ]]>"
    echo "        </description>"
    echo "        <styleUrl>${marker}</styleUrl>"
    echo "        <Point>"
    echo "          <coordinates>"
    echo "            ${longitude},${latitude},0"
    echo "          </coordinates>"
    echo "        </Point>"
    echo "      </Placemark>"
  done
  echo "    </Folder>"
  return 0
}

generateTrack() {
  local positions=() ; readarray -t positions < <( ${LOGPOSITIONS} ${1} )
  local distance=$( ${LOGTRIP} ${1} )
  local hours=$( ${LOGRUNTIME} ${1} )

  if [ ${#positions[@]} -gt 1 ] ; then
    local a=$( echo ${positions[1]} | ${JQ} -j '.longitude,",",.latitude' )
    local b=
    local sog=
    local sogmsg=
    for (( i = 2; i < ${#positions[@]} ; i++ )) ; do
      b=$( echo ${positions[${i}]} | ${JQ} -j '.longitude,",",.latitude' )
      sog=0
      sogmsg="SOG not available"
      if [[ $( ${JQ} -j 'has("speedOverGround")' <<< ${positions[${i}]} ) == true ]] ; then
        sog=$( echo ${positions[${i}]} | ${JQ} -j '.speedOverGround | floor' )
        sogmsg="SOG ${sog}kph"
      fi
      echo "    <Folder id='track-${i}'>"
      echo "      <Placemark>"
      echo "        <name>${distance}km (${hours}h)</name>"
      echo "        <description>"
      echo "          <![CDATA["
      echo "            <br>${sogmsg}"
      echo "          ]]>"
      echo "        </description>"
      echo "        <styleUrl>#linestyle${sog}</styleUrl>"
      echo "        <LineString>"
      echo "          <coordinates>"
      echo "            ${a},0"
      echo "            ${b},0"
      echo "          </coordinates>"
      echo "        </LineString>"
      echo "      </Placemark>"
      echo "    </Folder>"
      a=${b}
    done
  fi
  return 0
}

generateVessels() {
  local vessels=()
  local marker="#vesselmarker"

  readarray -t vessels < <( ${LOGGREP} "VESSEL" ${1} )

  echo "    <Folder id='${1}-vessels'>"
  for vessel in "${vessels[@]}" ; do
    local mmsi=$(echo ${vessel} | ${JQ} -j '.mmsi')
    local name=$(echo ${vessel} | ${JQ} -j '.name')
    local heading=$(echo ${vessel} | ${JQ} -j '.heading')
    local longitude=$(echo ${vessel} | ${JQ} -j '.position.longitude')
    local latitude=$(echo ${vessel} | ${JQ} -j '.position.latitude')
    local label="${name} (${mmsi})"
    if [ "${latitude}" != "null" ] ; then
    echo "      <Placemark>"
    echo "        <name>${name} (${mmsi})</name>"
    echo "        <description>"
    echo "          <![CDATA["
    echo "            <a href='/?tag=${name}'>${name}</a>"
    echo "          ]]>"
    echo "        </description>"
    echo "        <styleUrl>${marker}</styleUrl>"
    echo "        <Point>"
    echo "          <coordinates>"
    echo "            ${longitude},${latitude},0"
    echo "          </coordinates>"
    echo "        </Point>"
    echo "      </Placemark>"
    fi
  done
  echo "    </Folder>"
  return 0
}

echo "<?xml version='1.0' encoding='UTF-8'?>"
echo "<kml xmlns='http://www.opengis.net/kml/2.2'>"
echo "<Document>"
echo "  <Style id='linestyle'><LineStyle><color>ff00ffff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle0'><LineStyle><color>ff00ffff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle1'><LineStyle><color>ff00efff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle2'><LineStyle><color>ff00dfff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle3'><LineStyle><color>ff00cfff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle4'><LineStyle><color>ff00bfff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle5'><LineStyle><color>ff00afff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle6'><LineStyle><color>ff009fff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle7'><LineStyle><color>ff008fff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle8'><LineStyle><color>ff007fff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle9'><LineStyle><color>ff006fff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle10'><LineStyle><color>ff005fff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle11'><LineStyle><color>ff004fff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle12'><LineStyle><color>ff003fff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle13'><LineStyle><color>ff002fff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle14'><LineStyle><color>ff001fff</color><width>4</width></LineStyle></Style>"
echo "  <Style id='linestyle15'><LineStyle><color>ff000fff</color><width>4</width></LineStyle></Style>"
echo ""
echo "  <Style id='startmarker'><IconStyle><scale>0.5</scale><Icon><href>/beatrice/icons/marker-15.svg</href></Icon><hotSpot x='0.5' y='0' xunits='fraction' yunits='fraction'/></IconStyle></Style>"
echo "  <Style id='stopmarker'><IconStyle><scale>0.5</scale><Icon><href>/beatrice/icons/marker-15.svg</href></Icon><hotSpot x='0.5' y='0' xunits='fraction' yunits='fraction'/></IconStyle></Style>"
echo "  <Style id='haltmarker'><IconStyle><scale>0.5</scale><Icon><href>/beatrice/icons/marker-stroked-11.svg</href></Icon><hotSpot x='0.5' y='0' xunits='fraction' yunits='fraction'/></IconStyle></Style>"
echo "  <Style id='mooredmarker'><IconStyle><scale>0.5</scale><Icon><href>/beatrice/icons/marker-15.svg</href></Icon><hotSpot x='0.5' y='0' xunits='fraction' yunits='fraction'/></IconStyle></Style>"
echo "  <Style id='vesselmarker'><IconStyle><scale>0.5</scale><Icon><href>/beatrice/icons/circle-stroked-11.svg</href></Icon><hotSpot x='0.5' y='0.5' xunits='fraction' yunits='fraction'/></IconStyle></Style>"
echo ""

for FILENAME in ${FILESPECS} ; do
  LOGFILE=$( ${BASENAME} ${FILENAME} )
  echo "  <Folder id='${LOGFILE}'>"

  if [ "${OPTION_GENERATE_STOPS}" ] ; then generateStops "${LOGFILE}" ; fi
  if [ "${OPTION_GENERATE_TRACK}" ] ; then generateTrack "${LOGFILE}" ; fi
  if [ "${OPTION_GENERATE_VESSELS}" ] ; then generateVessels "${LOGFILE}" ; fi

  echo "  </Folder>"
done

echo "</Document>"
echo "</kml>"
exit 0

