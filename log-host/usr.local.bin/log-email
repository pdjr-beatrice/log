#!/bin/bash
# NAME
#   log-email - email a disgest of one or more log files.
# SYNOPSIS
#   log-email [-o] [ -r recipient_email_address ] logname
# DESCRIPTION
#   log-email constructs an email containing data drawn from the log
#   files identified by logname which must have one of the following
#   forms:
#
#   YYYY     send a log file for the specified year;
#   YYYYMM   send a log file for the specified month;
#   YYYYMMDD send a log file for the specified day.
#
#   The -o switch causes the generated email to be printed to standard
#   output rather than being sent.
#
#   The generated email (discussed below) is sent by default to the
#   LOG_EMAIL_DEFAULT_RECIPIENT specified in the log.defs file, but
#   this can be overriden using the -r option.
#
# EMAIL STRUCTURE
#   The generated email is a mult-part MIME message consisting of
#   two or three parts:
#
#   Part 1 (email body) consists of a Subject line and a few lines of
#   text which supply metadata describing the log. This data is in a
#   format which can be easily processed to create a Wordpress page
#   by the Wordpress Postie plugin.
#
#   Part 2 (KML file attatchment 'logname.kml') plots vessel movement
#   over the selected time period.
#
#   Part 3 (text file attatchment 'logname.log') is only included if
#   the selected log is a 'day' log and is simply a copy of the log
#   system data file for the selected day.

source log.defs

if [ "${1}" == "" ] ; then
    echo -e "usage: log-email [-d] [-r recipient] logname\n"
    exit 1
fi

# The recipient of the generated email
EMAIL_RECIPIENT=${LOG_EMAIL_DEFAULT_RECIPIENT}

# The publication date of the email (i.e. today's date)
WP_PUBDATE=$( ${DATE} '+%Y%m%d' )

# The date to which the log data relates prettily formatted.
WP_TITLE_DATE=""

# The Wordpress category for the supplied email content.
WP_CATEGORY="log"

# Comma separated list of Wordpress tags characterising the email content.
WP_TAG=""

EMAIL_SEND=""

if [ "${1}" == "-o" ] ; then
    EMAIL_SEND="--output"
    shift
fi

# Override the default email recipient if -r option specified.
if [ "${1}" == "-r" ] ; then
    shift
    EMAIL_RECIPIENT=${1}
    shift
fi

# Sanity check presence and format of logname.
if [ $# -eq 0 ] ; then echo "log-file: missing logname" ; exit 1 ; fi
if ! [[ "${1}" =~ [0-9][0-9][0-9][0-9]([0-9][0-9])?([0-9][0-9])? ]] ; then echo "log-file: bad logname" ; fi

LOGNAME=${1}
case ${#LOGNAME} in
    4)
        WP_TAG="year,${LOGNAME}"
        WP_BODY_ANNEX="[yafig category='log' tag='month+${LOGNAME}' columns=4]"
        WP_TITLE_DATE=$( ${DATE} -d "${LOGNAME}0101" "+%Y - " ) 
        WP_PUBDATE=$( ${DATE} -d "${LOGNAME}1231 +1 day" '+%Y%m%d' )
        ;;
    6)
        WP_TAG="month,${LOGNAME},${LOGNAME:0:4}"
        WP_TITLE_DATE=$( ${DATE} -d "${LOGNAME}01" "+%B %Y - " ) 
        WP_PUBDATE=$( ${DATE} -d "${LOGNAME}01 +1 month" '+%Y%m%d' )
        ;;
    8)
        WP_TAG="day,${LOGNAME},${LOGNAME:0:6},${LOGNAME:0:4}"
        WP_TITLE_DATE=$( ${DATE} -d "${LOGNAME}" "+%a %d %B %Y - " ) 
        WP_PUBDATE=$( ${DATE} -d "${LOGNAME}" '+%Y%m%d' )
        ;; 
    *)
        echo "log-email: bad logfile specification (${LOGNAME})"
        exit 2
esac

STOPS=$( ${LOGSTOPS} "${LOGNAME}" )
STOPCOUNT=$(${GREP} -c '^' <<<"${STOPS}")

if [ ${STOPCOUNT} -eq 0 ] ; then
    echo "log-email: log is corrupt (no stop position data)"
    exit 3
fi

STARTPOSITION=$(${HEAD} -1 <<< "${STOPS}")
LAT=$(echo ${STARTPOSITION} | ${JQ} -j '.latitude');
LON=$(echo ${STARTPOSITION} | ${JQ} -j '.longitude');
START="${LAT}N ${LON}E"
END=""
ENDCLAUSE=""
REVERSEGEORESULT=$(${WGET} -q -O - "${NOMINATUM_QUERY}lat=${LAT}&lon=${LON}")
BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.hamlet')
if [ "${BLOB}" == "null" ] ; then BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.village') ; fi
if [ "${BLOB}" == "null" ] ; then BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.suburb') ; fi
if [ "${BLOB}" == "null" ] ; then BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.municipality') ; fi
if [ "${BLOB}" == "null" ] ; then BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.city') ; fi
if [ "${BLOB}" != "null" ] ; then START=$(${RECODE} ..html <<<"${BLOB}") ; fi
if [ "${DEBUG}" == "yes" ] ; then echo "log-email: debug: start position identified as ${START}" ; fi

# If there is a termination position, then do the same thing for that.
#
if [ ${STOPCOUNT} -gt 1 ]; then
    STOPPOSITION=$(${TAIL} -1 <<< "${STOPS}")
    LAT=$(echo ${STOPPOSITION} | ${JQ} -j '.latitude');
    LON=$(echo ${STOPPOSITION} | ${JQ} -j '.longitude');
    END="${LAT}N ${LON}E"
    REVERSEGEORESULT=$(${WGET} -q -O - "${NOMINATUM_QUERY}lat=${LAT}&lon=${LON}")
    BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.hamlet')
    if [ "${BLOB}" == "null" ] ; then BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.village') ; fi
    if [ "${BLOB}" == "null" ] ; then BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.suburb') ; fi
    if [ "${BLOB}" == "null" ] ; then BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.municipality') ; fi
    if [ "${BLOB}" == "null" ] ; then BLOB=$(echo ${REVERSEGEORESULT} | ${JQ} -j '.address.city') ; fi
    if [ "${BLOB}" != "null" ] ; then END=$(${RECODE} ..html <<<"${BLOB}") ; fi
    if [ "${DEBUG}" == "yes" ] ; then echo "log-email: debug: end position identified as ${END}" ; fi
fi

if [ ${STOPCOUNT} -gt 1 ] ; then
    WP_TAG="passage,${WP_TAG}"
    ENDCLAUSE=" to ${END}"
else
    WP_TAG="moored,${WP_TAG}"
    ENDCLAUSE=""
fi

SUBJECT="${WP_CATEGORY}: ${WP_TITLE_DATE}${START}${ENDCLAUSE}"
BODY="date: ${WP_PUBDATE}"$'\n'
BODY="${BODY}tags: ${WP_TAG},${START},${END}"$'\n'
BODY="${BODY}${WP_BODY_ANNEX}"$'\n'$'\n'
KMLFILENAME="/tmp/${LOGNAME}.kml"
LOGFILENAME="/tmp/${LOGNAME}.log"

${LOGKML} -a ${LOGNAME} > "${KMLFILENAME}"

if [ ${#LOGNAME} -eq 8 ] ; then
    ${CP} "${LOGDIR}${LOGNAME}" "${LOGFILENAME}"
    sudo -u wordpress ${MIMECONSTRUCT} ${EMAIL_SEND} --to "${EMAIL_RECIPIENT}" --subject "${SUBJECT}" --string "${BODY}" --file-attach "${KMLFILENAME}" --file-attach "${LOGFILENAME}" 
else
    sudo -u wordpress ${MIMECONSTRUCT} ${EMAIL_SEND} --to "${EMAIL_RECIPIENT}" --subject "${SUBJECT}" --string "${BODY}" --file-attach "${KMLFILENAME}"
fi
