source log.defs

CONFIGFILE=""
for name in /etc/log.cfg /usr/local/etc/log.cfg ./log.cfg ; do
    if [ -f "${name}" ] ; then CONFIGFILE="/usr/local/etc/log.cfg" ; fi
done
LOGDIR=${LOGDIR}
CLOSE="no"

while [ "${1}" != "" ] ; do
    case ${1} in
        -c) # Command line explicitly specifies a configuration file
            shift
            CONFIGFILE="${1}"
            ;;
        -d) # Command line explicitly specifies a log directory
            shift
            LOGDIR="${1}"
            ;;
        -h) # Display usage message
            echo "usage: log-update [-c configfile] [-d logdir] [close]"
            echo "usage: log-update [-h]"
            exit 0
            ;;
        close | CLOSE) # We should process the occasional log rules
            CLOSE="yes"
            ;;
        *)  
            ;;
    esac
    shift
done

if [ "${CONFIGFILE}" == "" ] ; then 
    echo "log-update: the -c option requires an argument"
    exit 1
else
    if [ ! -f "${CONFIGFILE}" ] ; then
        echo "log-update: bad or missing configuration file '${CONFIGFILE}'"
        exit 3
    fi
fi

if [ "${LOGDIR}" == "" ] ; then 
    echo "log-update: the -d option requires an argument"
    exit 1
else
    if [ ! -d "${LOGDIR}" ] ; then
        echo "log-update: bad or missing log directory '${LOGDIR}'"
        exit 1
    fi
fi

LOGFILE=$(${DATE} '+%Y%m%d')
LOGPATHNAME=${LOGDIR}${LOGFILE}
LOGDATE=$(${DATE} --utc +%FT%TZ)
FREQUENTDEFS=$(${SED} -e '/^$/,$d' ${CONFIGFILE})
OCCASIONALDEFS=$(${TAC} ${CONFIGFILE} | ${SED} -e '/^$/,$d;' | ${TAC})
ALLDEFS=$(${GREP} -e '^[^$]' ${CONFIGFILE})

# If LOGFILE exists, then our job is to add just that information which it is
# sensible to log every ; if LOGFILE doesn't exist, then it must
# be the start of a new day and we should log everything.
#

if [ -f "${LOGPATHNAME}" ] && [ "${CLOSE}" == "yes" ] ; then
    while read -r TOKEN LABEL SIGNALKPATH; do
        CURRENTVALUE=$(normalise "${TOKEN}" "$(${WGET} -q -O - ${SIGNALKPATH} | ${JQ} -j '.value' | tr -d '\012')")
        TIMESTAMP=$(${WGET} -q -O - ${SIGNALKPATH} | ${JQ} -j '.timestamp' | tr -d '\012')
        if [ "${CURRENTVALUE}" ] ; then
            echo "${LOGDATE} [${TIMESTAMP}] ${TOKEN} ${LABEL} ${CURRENTVALUE}" >> ${LOGPATHNAME}
        fi
    done <<< "${OCCASIONALDEFS}"
else
    if [ ! -f "${LOGPATHNAME}" ] ; then
	    while read -r TOKEN LABEL SIGNALKPATH; do
            CURRENTVALUE=$(normalise "${TOKEN}" "$(${WGET} -q -O - ${SIGNALKPATH} | ${JQ} -j '.value' | tr -d '\012')")
            TIMESTAMP=$(${WGET} -q -O - ${SIGNALKPATH} | ${JQ} -j '.timestamp' | tr -d '\012')
            if [ "${CURRENTVALUE}" ] ; then
                echo "${LOGDATE} [${TIMESTAMP}] ${TOKEN} ${LABEL} ${CURRENTVALUE}" >> ${LOGPATHNAME}
            fi
	    done <<< "${OCCASIONALDEFS}"
    fi
    while read -r TOKEN LABEL SIGNALKPATH; do
        CURRENTVALUE=$(normalise "${TOKEN}" "$(${WGET} -q -O - ${SIGNALKPATH} | ${JQ} -j '.value' | tr -d '\012')")
        TIMESTAMP=$(${WGET} -q -O - ${SIGNALKPATH} | ${JQ} -j '.timestamp' | tr -d '\012')
        if [ "${CURRENTVALUE}" ] ; then
            LASTLOGVALUE=$(${GREP} "${TOKEN}" "${LOGPATHNAME}" | ${TAIL} -1 | ${CUT} -d ' ' -f5-)
            if [ ! "${LASTLOGVALUE}" ] ; then
                echo "${LOGDATE} [${TIMESTAMP}] ${TOKEN} ${LABEL} ${CURRENTVALUE}" >> ${LOGPATHNAME}
            else
                ENGINESTATE=$(${GREP} "ENGINE State" "${LOGPATHNAME}" | ${TAIL} -1 | ${CUT} -d ' ' -f5-) ; if [ "${ENGINESTATE}" == "" ] ; then ENGINESTATE=0 ; fi
                case ${TOKEN} in
                    BATTERYSTATE | ENGINE | GENERATOR | TANKLEVEL)
                        if [ "${CURRENTVALUE}" != "${LASTLOGVALUE}" ] ; then
                            echo "${LOGDATE} [${TIMESTAMP}] ${TOKEN} ${LABEL} ${CURRENTVALUE}" >> ${LOGPATHNAME}
                        fi
                        ;;
                    POSITION)
                        places=$(( 3 + ${ENGINESTATE} ))
                        flat=$(printf "%.${places}f" $(echo "${CURRENTVALUE}" | ${JQ} -j '.latitude'))
                        flon=$(printf "%.${places}f" $(echo "${CURRENTVALUE}" | ${JQ} -j '.longitude'))
                        slat=$(printf "%.${places}f" $(echo "${LASTLOGVALUE}" | ${JQ} -j '.latitude'))
                        slon=$(printf "%.${places}f" $(echo "${LASTLOGVALUE}" | ${JQ} -j '.longitude'))
                        if [ "${flat}" == "${slat}" ] && [ "${flon}" == "${slon}" ] ; then
                            echo
                        else
                            echo "${LOGDATE} [${TIMESTAMP}] ${TOKEN} ${LABEL} ${CURRENTVALUE}" >> ${LOGPATHNAME}
                        fi
                        ;;
                esac
            fi
        fi
    done <<< "${FREQUENTDEFS}"
fi
