#!/bin/bash
# NAME
#   log-plot - generate a static map from log file position data.
# SYNOPSIS
#   log-plot [-a] [-s {w}x{h}] {logfile}
# DESCRIPTION
#   

source log.defs

if [ "${1}" == "" ] ; then
    echo -e "usage: log-plot [ -s wxh ] [ -a ] logfile\n"
    exit 1
fi

OPT_ALLSTOPS="no"
LOGFILE=
MAPBOX_MAPSIZE=${MAPBOX_MAPSIZE}

while [ "${1}" != "" ]; do
    case ${1} in
        -a) 
            ALLSTOPS="yes"
            ;;
        -s)
            MAPBOX_MAPSIZE=""
            ;;
        *)
            if [ "${MAPBOX_MAPSIZE}" == "" ] ; then
                MAPBOX_MAPSIZE=${1}
            else
                LOGFILE=${1}
            fi
            ;;
    esac
    shift
done

if [ "${LOGFILE}" == "" ] ; then
    echo "log-plot: logfile name must be specified"
    exit 1
fi

if [ "${MAPBOX_MAPSIZE}" == "" ] ; then
    echo "log-plot: -s must be followed by a size argument"
    exit 1
fi

while [ ${#LOGFILE} -lt 8 ] ; do LOGFILE=${LOGFILE}'?' ; done
LOGPATHNAME=${LOGDIR}${LOGFILE}

STOPS=$(${GREP} -h 'POSITION\|ENGINE' ${LOGPATHNAME} | ${CUT} -d ' ' -f5- | ${GREP} -B1 '^0' | ${GREP} '^{' | ${UNIQ})
STOPCOUNT=$(${GREP} -c '^' <<<"${STOPS}")
POSITIONS=$(${GREP} -h 'POSITION' ${LOGPATHNAME} | ${CUT} -d ' ' -f5-) 
POSITIONCOUNT=$(${GREP} -c '^' <<<"${POSITIONS}")

if [ ${STOPCOUNT} -eq 0 ] ; then
    echo "log-plot: logfile '${LOGFILE}' contains no position data"
    exit 3
fi

# If there is only one position in the file adjust the zoom level to
# give context that automatic scaling would not.
#
if [ ${STOPCOUNT} == 1 ] ; then
    read -r value <<<"$(echo "${POSITIONS}" | ${HEAD} -1)"
    lat=$(echo ${value} | ${JQ} -j '.latitude')
    lon=$(echo ${value} | ${JQ} -j '.longitude')
    MAPBOX_POSITION="${lon},${lat},13"
fi

MAPBOX_MARKERS=""
MAPBOX_MARKER_SEPARATOR=""
MAPBOX_MARKER_COUNT=1
while read -r value ; do
    lat=$(echo ${value} | ${JQ} -j '.latitude')
    lon=$(echo ${value} | ${JQ} -j '.longitude')
    MAPBOX_MARKER=""

    case ${MAPBOX_MARKER_COUNT} in
        1)
            MAPBOX_MARKER="pin-s-harbor+00FF00(${lon},${lat})"
            ;;
        ${STOPCOUNT})
            MAPBOX_MARKER="pin-s-harbor+FF0000(${lon},${lat})"
            ;;
        *)
            if [ "${ALLSTOPS}" == "yes" ] ; then
                MAPBOX_MARKER="pin-s-harbor+888888(${lon},${lat})"
            fi
            ;;
    esac
    if [ "${MAPBOX_MARKER}" != "" ] ; then
        MAPBOX_MARKERS="${MAPBOX_MARKERS}${MAPBOX_MARKER_SEPARATOR}${MAPBOX_MARKER}"
    fi

    MAPBOX_MARKER_SEPARATOR=","
    MAPBOX_MARKER_COUNT=$(( ${MAPBOX_MARKER_COUNT} + 1 ))
done <<< "${STOPS}"

MAPBOX_PATH=""
if [ ${POSITIONCOUNT} -gt 1 ] ; then
    GEOJSON='geojson({"type":"LineString","coordinates":['
    SEP=""
    while read -r value; do
        latlon=${SEP}$(echo ${value} | ${JQ} -j '"[",.longitude,",",.latitude,"]"')
        GEOJSON="${GEOJSON}${latlon}"
        SEP=","
        done <<< "${POSITIONS}"
    GEOJSON=${GEOJSON}']})'
    MAPBOX_PATH=",${GEOJSON}"
fi

URL="${MAPBOX_QUERY}/${MAPBOX_MARKERS}${MAPBOX_PATH}/${MAPBOX_POSITION}/${MAPBOX_MAPSIZE}?access_token=${MAPBOX_ACCESS_TOKEN}"
${WGET} -q -O - "${URL}"

