#!/bin/bash
#
# NAME
#   log-report - interpolate values from selected log files into a report.
#
# SYNOPSIS
#   log-report [-t report-template] logfilespec...
#   log-report -h
#
# DESCRIPTION
#   log-report processes report-template (or the default template called
#   log-report.template), replacing tokens of the form ${COMMAND [ARGS...]}
#   with values drawn from the selected log files.
#
#   COMMAND must be one of EXEC or DATE.

source log.defs

REPORT_TEMPLATE=
for directory in /etc/ /usr/local/etc/ ./ ; do
    if [ -f "${directory}${LOG_REPORT_DEFAULT_TEMPLATE}" ] ; then
        REPORT_TEMPLATE="${directory}${LOG_REPORT_DEFAULT_TEMPLATE}"
    fi
done

DISPLAYPOSITIONDATA="yes"
LOGFILESPEC=""
LOGDATE=

while [ "${1}" != "" ] ; do
    case ${1} in
	-h)
		${PERL} '^#' ${0}
		exit 0
		;;
	-t)
		shift
        if [ "${1}" !== "" ] ; then
		    REPORT_TEMPLATE=${1}
        else
            echo "$(${BASENAME} ${0}): you must specify an argument to the -t option"
            exit 1
        fi
	    ;;
    *)
        LOGFILESPEC=${1}
        ;;
    esac
    shift
done

if [ "${REPORT_TEMPLATE}" == "" ] ; then
	echo "log-report: the default report template file could not be found"
	exit 1
else
	if [ ! -f "${REPORT_TEMPLATE}" ] ; then
		echo "log-report: bad or missing report file \"${REPORT_TEMPLATE}\""
		exit 2
	fi
fi
	

case "${#LOGFILESPEC}" in
    4)
        LOGDATE=${LOGFILESPEC}
        ;;
    6)
        LOGDATE=$(${DATE} -d ${LOGFILESPEC}01 '+%B %Y')
        ;;
    8)
        LOGDATE=$(${DATE} -d ${LOGFILESPEC} '+%a %d %B %Y')
        ;;
    *)
        echo "log-report: logfile name must be specified"
        exit 1
        ;;
esac

STOPS=$(${LOGSTOPS} ${LOGFILESPEC})
REPORT=$(${CAT} ${REPORT_TEMPLATE})

while read -r line ; do
	TOKENS=$(${PERL} -ne 'print "$1\n" if /\$\{(.*?)\}/' <<< "${line}")
    while [ "${TOKENS}" ] ; do
	    TARGET="\${${TOKENS}}"
	    REPLACEMENT=
		read -r action arg1 arg2 arg3 arg4 <<< "${TOKENS}"
		case $action in
			EXEC)
				COMMAND="${!arg1} ${arg2} ${arg3} ${arg4} ${LOGFILESPEC}"
				REPLACEMENT=$(eval ${COMMAND})
				;;
			DATE)
				REPLACEMENT=${LOGDATE}
				;;
			*)
				;;
		esac
		line=${line/${TARGET}/${REPLACEMENT}}
	    TOKENS=$(${PERL} -ne 'print "$1\n" if /\$\{(.*?)\}/' <<< "${line}")
    done
	echo $line
done <<< "${REPORT}"

