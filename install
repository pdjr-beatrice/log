#!/bin/bash
# NAME
#   install - install log system and/or log system WordPress extensions.
#
# SYNOPSIS
#   install [-h]
#   install [-s] directory_path
#
# DESCRIPTION
#   Install either a log system or WordPress extensions which support
#   rendering of log system data.
#
#   To install WordPress extensions, directory_path must specify the
#   root directory of a WordPress installation. Extension scripts will
#   be installed in the wp-content/mu-plugins/ sub-directory.
#
#   To install a log system, directory_path must specify the folder in
#   which the log system will create and maintain its log files. If
#   directory_path does not exist it will be created. Log system
#   scripts will be installed into folders under /usr/local/ and the
#   file /usr/local/bin/log.defs will be updates with the specified
#   directory_path.
#
#   The -h option displays this manual page.
#
#   The -s option will cause files from the repository to be
#   symbolically linked into the host file system (normally they will
#   simply be copied).
#
#   The install script creates the file /usr/local/bin/log-uninstall
#   which can be used to delete/unlink and installed files.
#
# AUTHOR
#   Paul Reeve <preeve@pdjr.eu> 

LOG_SOURCE_DIRECTORY=log/
WORDPRESS_SOURCE_DIRECTORY=wordpress/

SYMBOLIC=
TARGET_DIRECTORY=
UNINSTALL_SCRIPT_DIRECTORY="/usr/local/bin/"
UNINSTALL_SCRIPT_NAME="log-uninstall"
declare -a UNINSTALL_SCRIPT

while [ "${1}" != "" ] ; do
  case ${1} in
    -h)
      exit 1
      ${SED} -e '/^$/,$d' ${0}
      ;;
    -s)
      SYMBOLIC=yes
      echo "install: installing by symbolic link"
      ;;
    *)
      TARGET_DIRECTORY="${1}"
      ;;
  esac
  shift
done

if [ "${TARGET_DIRECTORY}" == "" ] ; then echo "install: log directory or WordPress directory must be specified" ; exit 1 ; fi

# Determine installation type
if [ -f "${TARGET_DIRECTORY}/wp-config.php" ] ; then
  echo "install: installing WordPress extensions"
  SOURCE_DIRECTORY=${WORDPRESS_SOURCE_DIRECTORY}
else
  echo "install: installing log system"
  SOURCE_DIRECTORY=${LOG_SOURCE_DIRECTORY}
  DATA_DIRECTORY="${TARGET_DIRECTORY}"
  TARGET_DIRECTORY="/"
  if [ ! -f "${DATA_DIRECTORY}" ] ; then
    if [ ! -d "${DATA_DIRECTORY}" ] ; then
      echo "install: creating log data directory ${DATA_DIRECTORY}"
      mkdir -p "${DATA_DIRECTORY}"
      chmod 777 "${DATA_DIRECTORY}"
    else
      echo "install: preserving existing log data directory ${DATA_DIRECTORY}"
    fi
  else
    echo "install: log data directory cannot be created (file exists)"
    exit 1
  fi
fi

UNINSTALL_SCRIPT+=("#!/bin/bash")
UNINSTALL_SCRIPT+=("rm \"${UNINSTALL_SCRIPT_DIRECTORY}${UNINSTALL_SCRIPT_NAME}\"")
    
if [ -d "${SOURCE_DIRECTORY}" ] ; then
  cd "${SOURCE_DIRECTORY}"
  for INSTALL_DIR_PATTERN in * ; do
    INSTALL_DIR="${TARGET_DIRECTORY}${INSTALL_DIR_PATTERN//\.//}"
    pushd "${INSTALL_DIR_PATTERN}" > /dev/null
    for SCRIPT_NAME in * ; do
      SCRIPT_PATHNAME=$( realpath ${SCRIPT_NAME} )
      pushd "${INSTALL_DIR}" > /dev/null
      rm -f ${SCRIPT_NAME}
      UNINSTALL_SCRIPT+=("rm \"${INSTALL_DIR}${SCRIPT_NAME}\"")
      echo "install: installing \"${INSTALL_DIR}${SCRIPT_NAME}\""
      if [ "${SYMBOLIC}" == "yes" ] ; then
        ln -s "${SCRIPT_PATHNAME}" .
      else
        cp "${SCRIPT_PATHNAME}" .
      fi
      chmod 755 "${SCRIPT_NAME}"
      popd > /dev/null
    done
    popd > /dev/null
  done
fi

# If log system install, then add log directory entry to defs.
if [ ! -f "${TARGET_DIRECTORY}/wp-config.php" ] ; then
  echo "install: updating /usr/local/bin/log.defs"
  ${SED} -i "/^LOGDIR=/c\LOGDIR=${DATA_DIRECTORY}\/" /usr/local/bin/log.defs
fi

# Install log-uninstall script
if [ -d "${UNINSTALL_SCRIPT_DIRECTORY}" ] ; then
  echo "install: installing ${UNINSTALL_SCRIPT_DIRECTORY}${UNINSTALL_SCRIPT_NAME}"
  printf "%s\n" "${UNINSTALL_SCRIPT[@]}" > "${UNINSTALL_SCRIPT_DIRECTORY}${UNINSTALL_SCRIPT_NAME}"
  chmod 755 "${UNINSTALL_SCRIPT_DIRECTORY}${UNINSTALL_SCRIPT_NAME}"
fi
